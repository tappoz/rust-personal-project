name: Rust Personal Project

# only manual for now
on: [workflow_dispatch]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2
    - name: Check environment
      run: make version
    - name: Setup Rust environment and install Python dependencies
      run: |
        make \
          setup-rust-env \
          setup-python-dependencies
    - name: Lint (and format)
      run: make lint
    - name: Setup Docker network and services (Postgres, RabbitMQ)
      run: |
        make \
          create-docker-network \
          create-db-docker-volume \
          run-pp-storage \
          run-pp-queue
    - name: Check and configure Docker services (Postgres, RabbitMQ)
      run: |
        sleep 8
        make \
          docker-ps \
          test-pp-storage-connection \
          create-db \
          setup-pp-queue
        make \
          docker-ps
    - name: Run all Rust tests
      run: make all-rust-tests
    - name: Build and run the Rust backend HTTP REST API via Docker
      run: |
        make \
          build-pp-backend-api \
          run-pp-backend-api \
          docker-ps
    - name: Run HTTP integration tests
      run: make http-integration-test
    # Comment out for now as the Rust compiler
    # takes ages and there's no easy way to cache dependencies...
    # - name: Example run CLI_01
    #   run: make cli-run-01
    # - name: Example run CLI_02
    #   run: make cli-run-02
    # - name: Build Task Producer executable
    #   run: make build-task-producer
    # - name: Build Task Consumer executable
    #   run: make build-task-consumer
    - name: Show backend docker logs
      if: always()
      run: make backend-logs
